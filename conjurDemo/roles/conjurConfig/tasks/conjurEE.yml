---
- name: createConjurNetwork
  docker_network:
    name: "{{ conjur_network_name }}"
    state: present

- name: createConjurVolume
  docker_volume:
    name: "{{ item }}"
    state: present
  with_items:
   - hostfactoryTokens
   - identity
   - tls
   - "{{ conjur_audit_volume }}"

- name: Start Conjur CLI
  docker_container:
    name: "{{ conjur_cli_container_name }}"
    image: "{{ conjur_cli_image_name }}"
    state: started
    user: root
    volumes:
     - "hostfactoryTokens:/hostfactoryTokens:rw"
     - "identity:/identity:rw"
     - "tls:/tls:rw"
    restart_policy: always
    networks:
     - name: "{{ conjur_network_name }}"
    working_dir: /scripts
    entrypoint: []
    command: ["sleep", "infinity"]

- name: Copy policies into cli container
  shell: |
    docker cp "{{ role_path}}/files/conjur_cli_image/policy" "{{ conjur_cli_container_name }}:/policy"

- name: Copy API scripts into cli container
  shell: |
    docker cp "{{ role_path}}/files/conjur_cli_image/scripts/." "{{ conjur_cli_container_name }}:/scripts"

- name: Load Conjur appliance image from archive
  docker_image:
    name: "{{ conjur_EE_image_name }}"
    load_path: "{{ conjur_tar_path }}"
    state: present
    timeout: 120

- name: Get facts of loaded images
  docker_image_facts:
  register: loaded

- name: Get full name of conjur-appliance image
  set_fact:
    conjur_EE_image_name: "{{ item }}"
  with_items: "{{ loaded.images | json_query('[].RepoTags[0]') }}"
  when: ('conjur-appliance' in item)

- name: Start Conjur appliance
  docker_container:
    name: "{{ conjur_container_name }}"
    image: "{{ conjur_EE_image_name }}"
    state: started
    privileged: yes
    recreate: yes
    networks:
     - name: "{{ conjur_network_name }}"
    published_ports:
     - "{{ conjur_https_port }}:443"
     - "{{ conjur_postgres_rep_port }}:5432"
    volumes:
     - "{{ conjur_audit_volume }}:{{ conjur_audit_directory }}"
    env:
      CONJUR_AUTHENTICATORS="authn,authn-iam/prod,authn-k8s/okd-follower"
    restart_policy: always

- name: Configure Conjur container
  shell: |
    docker exec {{ conjur_container_name }} evoke configure master -h {{ conjur_container_name }} -p {{ conjur_admin_password }} {{ conjur_account }}

- name: Configure CLI for EE
  shell: |
    docker exec {{ conjur_cli_container_name }} bash -c "conjur init -u https://{{ conjur_container_name }} -a {{ conjur_account }} <<< yes"
    docker exec {{ conjur_cli_container_name }} conjur authn login -u admin -p {{ conjur_admin_password }}

- include_tasks: conjurFramework.yml
