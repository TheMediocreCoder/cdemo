---
- name: Create authentication for Ansible
  shell: |
    docker exec conjur-cli bash -c "echo -n {{ gogs_account }}:{{ gogs_account_password }} | base64"
  register: auth

- name: Create Organization in Ansible
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' {{ ansible_external_url }}/api/v2/organizations/ -d '{"name":"{{ ansible_organization }}","description":"Main Organization","custom_virtualenv":null}' | jq .id
  register: org_id

- name: get api user password
  shell: |
    docker exec {{ conjur_cli_container_name }} conjur variable value secrets/backend/gogs_secure_user_password
  register: password

- name: get api username
  shell: |
    docker exec {{ conjur_cli_container_name }} conjur variable value secrets/backend/gogs_secure_user
  register: username

- name: Create credentials for gogs
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' -d '{"name":"gogscred","description":"gogs","organization":{{ org_id.stdout }},"credential_type":2,"inputs":{"username":"{{ username.stdout }}","password":"{{ password.stdout }}"}}' {{ ansible_external_url }}/api/v2/credentials/ | jq .id
  register: cred_id

- name: Create Projects in Ansible
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' -d '{"name":"{{ item.name }}","description":"{{ item.description }}","local_path":"","scm_type":"git","scm_url":"{{ gogs_internal_url }}/{{ gogs_organization }}/{{ item.name }}.git","scm_branch":"master","scm_clean": false,"scm_delete_on_update": false,"credential":{{ cred_id.stdout }},"timeout":0,"organization":{{ org_id.stdout }},"scm_update_on_launch": true,"scm_update_cache_timeout":0,"custom_virtualenv":null}' {{ ansible_external_url }}/api/v2/projects/
  with_items:
   - { name: 'LAB3_AnsibleConjurIdentity', description: 'This project will deploy a conjur identity to a remote machine.' }
   - { name: 'LAB3_AnsibleConjurLookup', description: 'This project will look up a secret from Conjur.' }

- name: Get project id for LAB3_AnsibleConjurIdentity
  shell: |
    curl -k -s -X GET -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' {{ ansible_external_url }}/api/v2/projects/ | jq '.results[] | {name: .name, id: .id} | select(.name=="LAB3_AnsibleConjurIdentity") | .id'
  register: project_id_lab3

- name: Create Inventories
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' -d '{"name":"{{ item.name }}","description":"{{ item.description }}","organization":{{ org_id.stdout }},"kind":"","host_filter":null,"variables":"","insight_credentials":null}' {{ ansible_external_url }}/api/v2/inventories/
  with_items:
   - { name: 'conjurIdentity', description: 'This inventory will pull new machines to grant a conjur identity from the source project.' }

- name: Created source for conjurIdentity inventory
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' -d '{"name":"{{ item.name }}","description":"{{ item.description }}","source":"scm","source_path":"inventory/hosts","source_script":null,"source_vars":"","credential":null,"source_regions":"","instance_filters":"","group_by":"","overwrite":false,"overwrite_vars":true,"timeout":0,"verbosity":1,"inventory":2,"update_on_launch":false,"update_cache_timeout":0,"source_project":{{ project_id_lab3.stdout }},"update_on_project_update":true}' {{ ansible_external_url }}/api/v2/inventory_sources/
  with_items:
   - { name: 'newMachines', description: 'Machines that will get a conjur identity' }


- name: Get id for conjurIdentity inventory
  shell: |
    curl -k -s -X GET -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' {{ ansible_external_url }}/api/v2/inventories/ | jq '.results[] | {name: .name, id: .id} | select(.name=="conjurIdentity") | .id'
  register: conjurIdentity_inventory_id

- name: check that LAB3_AnsibleConjurIdentity project has been updated.
  shell: |
    curl -k -s -X GET -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' {{ ansible_external_url }}/api/v2/projects/ | jq '.results[] | {name: .name, id: .id, status: .summary_fields.last_update.status} | select(.name=="LAB3_AnsibleConjurIdentity") | .status'
  register: status
  until: '"successful" in status.stdout'
  retries: 240
  delay: 2

- name: Create job template for Conjur identity
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' -d '{"name":"{{ item.name }}","description":"{{ item.description }}","job_type":"run","inventory":{{ conjurIdentity_inventory_id.stdout }},"project":{{ project_id_lab3.stdout }},"playbook":"createIdentity.yml","forks":0,"limit":"","verbosity":0,"extra_vars":"","job_tags":"","force_handlers":false,"skip_tags":"","start_at_task":"","timeout":0,"use_fact_cache":false,"host_config_key":"","ask_diff_mode_on_launch":false,"ask_variables_on_launch":false,"ask_limit_on_launch":false,"ask_tags_on_launch":false,"ask_skip_tags_on_launch":false,"ask_job_type_on_launch":false,"ask_verbosity_on_launch":false,"ask_inventory_on_launch":false,"ask_credential_on_launch":false,"survey_enabled":false,"become_enabled":false,"diff_mode":false,"allow_simultaneous":false,"custom_virtualenv":null,"credential":null,"vault_credential":null}' {{ ansible_external_url }}/api/v2/job_templates/
  with_items:
  - { name: 'conjurIdentityPush', description: 'Pushes a conjur identity to the machine' }

- name: check that LAB3_AnsibleConjurlookup project has been updated.
  shell: |
    curl -k -s -X GET -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' {{ ansible_external_url }}/api/v2/projects/ | jq '.results[] | {name: .name, id: .id, status: .summary_fields.last_update.status} | select(.name=="LAB3_AnsibleConjurLookup") | .status'
  register: status
  until: '"successful" in status.stdout'
  retries: 240
  delay: 2

- name: Create job template for Conjur lookup plugin
  shell: |
    curl -k -s -X POST -H "Authorization: Basic {{ auth.stdout }}" -H 'Content-Type: application/json' -d '{"name":"{{ item.name }}","description":"{{ item.description }}","job_type":"run","inventory":{{ conjurIdentity_inventory_id.stdout }},"project":{{ project_id_lab3.stdout }},"playbook":"createIdentity.yml","forks":0,"limit":"","verbosity":0,"extra_vars":"","job_tags":"","force_handlers":false,"skip_tags":"","start_at_task":"","timeout":0,"use_fact_cache":false,"host_config_key":"","ask_diff_mode_on_launch":false,"ask_variables_on_launch":false,"ask_limit_on_launch":false,"ask_tags_on_launch":false,"ask_skip_tags_on_launch":false,"ask_job_type_on_launch":false,"ask_verbosity_on_launch":false,"ask_inventory_on_launch":false,"ask_credential_on_launch":false,"survey_enabled":false,"become_enabled":false,"diff_mode":false,"allow_simultaneous":false,"custom_virtualenv":null,"credential":null,"vault_credential":null}' {{ ansible_external_url }}/api/v2/job_templates/
  with_items:
  - { name: 'conjurLookupPlugin', description: 'Lookup plugin job on newly identified machines.' }