#!/bin/bash

set -u

# Removes packages, files, and containers from the environment in order to
# uninstall cdemo, perhaps to prepare to re-install.
#
# == Consequences for packages other than cdemo ==
#
# If run with the flag `--remove-docker` it will uninstall Docker entirely,
# which could have consequences for other workloads running on the machine.
#
# Also uninstalls these packages, which might impact other operations:
# * rabbitmq
# * postgres
# * nginx
# * ansible

function main {
  printf '\n-----'
  printf '\nStopping any running containers.'
  stop_containers
  printf '\nRemoving any stopped and running containers.'
  "$script_path"/remove-containers
  printf '\nRemoving any images on the system.'
  remove_images
  printf '\nRemoving any conjur network on the system.'
  remove_network
  printf '\nRemoving any conjur volume on the system.'
  remove_volume
  if [[ "$flag_remove_docker" == 1 ]]; then
    printf '\nRemoving docker'
    remove_docker
  fi
  printf '\nRemoving Weavescope'
  remove_weavescope
  printf '\nRemoving Ansible Tower'
  remove_ansible_and_tower
  printf '\nRemoving hosts file changes\n'
  remove_hosts
  clean_yum
  remove_openshift
  printf 'Finished cleaning environment.\n'
}

function stop_containers {
  if type oc &>/dev/null; then
    oc cluster down
  fi
  bin/remove-containers
}

function remove_images {
  docker image prune -a --force
}

function remove_network {
  docker network rm conjur &> /dev/null
}

function remove_volume {
  docker volume rm audit &> /dev/null
  docker volume rm hostfactorytokens &> /dev/null
  docker volume rm identity &> /dev/null
  docker volume rm tls &> /dev/null
  docker volume prune -f &> /dev/null
}

function remove_docker {
  pip uninstall docker -y &> /dev/null
  pip uninstall docker-py -y &> /dev/null
  pip uninstall docker-pycreds -y &> /dev/null
  pip uninstall pip -y &> /dev/null
  if [[ $(cat /etc/*-release | grep -w ID_LIKE) == 'ID_LIKE="rhel fedora"' ]]; then
    yum remove docker* -y &> /dev/null
    yum remove docker-ce -y &> /dev/null
    rm -f /etc/yum.repos.d/docker-ce.repo &> /dev/null
    rm -f /etc/docker/daemon*
  elif [[ $(cat /etc/*-release | grep -w ID) == 'ID=debian' ]]; then
    apt-get remove docker* -y &> /dev/null
    apt-get remove docker-ce -y &> /dev/null
  else
    printf "\nCouldn't figure out OS"
    exit
  fi
}

function clean_yum {
  yum clean all
  yum-complete-transaction
}

function remove_weavescope {
  rm -f /usr/local/bin/scope &> /dev/null
}

function remove_ansible_and_tower {
  "$script_path"/remove-ansible
  "$script_path"/bin/remove-rabbitmq
  "$script_path"/remove-postgres
  "$script_path"/remove-nginx
}

function remove_hosts {
  sed -i '/cdemo/d' /etc/hosts
  sed -i '/conjur/d' /etc/hosts
  sed -i '/okd/d' /etc/hosts
}

function remove_openshift {
  yum -y remove centos-release-openshift-origin*
  yum -y remove origin-*
  rm -Rf /opt/openshift
}

script_path="$( cd "$(dirname "$0")" ; pwd -P )"

flag_remove_docker=0
while [[ $# -gt 0 ]]; do
  case "$1" in
    --remove-docker)
      flag_remove_docker=1
      shift
      ;;
  esac
done

if [[ "$(basename "$0")" == "clean-environment" ]]; then
  main
fi
